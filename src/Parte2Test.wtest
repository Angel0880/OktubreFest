import Cervezas.*
import Jarras.*
import Personas.*
import Carpas.*

describe "Se viene el oktubre fest: parte 2" {
	
	const pilsner = new CervezaRubia(lupulo = 5, pais = "Alemania", graduacionPorLitro = 0.1)
	const stellaArtois = new CervezaNegra(lupulo = 3, pais = "Belgica", graduacionMundial = 5)
	const andes = new CervezaRoja(lupulo = 6, pais = "Argentina", porcentajeAlcohol = 15)
	const carpa1 = new Carpa(limiteGente = 5, tieneBanda = true, marcaVendida = andes)
	const carpa2 = new Carpa(limiteGente = 5, tieneBanda = false, marcaVendida = pilsner)
	const carpa3 = new Carpa(limiteGente = 3, tieneBanda = false, marcaVendida = stellaArtois)
	const jarra1 = new Jarra(capacidad = 0.5, marca = pilsner, servidaEn =  carpa3)
	const jarra2 = new Jarra(capacidad = 1, marca = stellaArtois, servidaEn = carpa2)
	const jarra3 = new Jarra(capacidad = 0.4, marca = andes, servidaEn = carpa1)
	const jorge = new Aleman(peso = 60, escuchaMusicaTradicional = true, nivelAguante = 200, paisDeNacimiento = "Alemania")
	const lucas = new Belga(peso = 50, escuchaMusicaTradicional = false, nivelAguante = 100, paisDeNacimiento = "Belgica")
	const ludmila = new Checo(peso = 45, escuchaMusicaTradicional = true, nivelAguante = 150, paisDeNacimiento = "Rep.Checa")
	
	fixture {
		
		jorge.comprarJarra(jarra1)
		jorge.comprarJarra(jarra2)
		jorge.comprarJarra(jarra2)
		lucas.comprarJarra(jarra1)
		lucas.comprarJarra(jarra3)
		lucas.comprarJarra(jarra3)
		ludmila.comprarJarra(jarra1)
		ludmila.comprarJarra(jarra1)
	 	ludmila.comprarJarra(jarra3)
	 	jorge.entrarA(carpa1)
	 	lucas.entrarA(carpa2)
	 	ludmila.entrarA(carpa1)
	 	
	 	assert.throwsException {
	 		
	 		jorge.entrarA(carpa2)
	 		lucas.entrarA(carpa1)
	 		ludmila.entrarA(carpa2)
	 		jorge.entrarA(carpa3)
	 		lucas.entrarA(carpa3)
	 		ludmila.entrarA(carpa3)
	 		
	 	}
	 
	}
	
	test "La carpa va o no" {
			
		assert.that(carpa1.cumplePreferenciaMusicaDe(jorge))
		assert.notThat(carpa1.cumplePreferenciaMusicaDe(lucas))
		assert.that(carpa1.cumplePreferenciaMusicaDe(ludmila))
		assert.notThat(carpa2.cumplePreferenciaMusicaDe(jorge))
		assert.that(carpa2.cumplePreferenciaMusicaDe(lucas))
		assert.notThat(carpa2.cumplePreferenciaMusicaDe(ludmila))
		assert.notThat(carpa3.cumplePreferenciaMusicaDe(jorge))
		assert.that(carpa3.cumplePreferenciaMusicaDe(lucas))
		assert.notThat(carpa3.cumplePreferenciaMusicaDe(ludmila))
		
	}
	
	test "Les interesa entrar?" {
		
		assert.that(jorge.quiereEntrar(carpa1))			
		assert.notThat(lucas.quiereEntrar(carpa1))		
		assert.that(ludmila.quiereEntrar(carpa1))		
		assert.notThat(jorge.quiereEntrar(carpa2))		
		assert.that(lucas.quiereEntrar(carpa2))			
		assert.notThat(ludmila.quiereEntrar(carpa2))	
		assert.notThat(jorge.quiereEntrar(carpa3))
		assert.notThat(lucas.quiereEntrar(carpa3))
		assert.notThat(ludmila.quiereEntrar(carpa3))
		
	}
	
	test "Veamos si les dejan entrar" {
		
		assert.that(carpa1.dejaIngresar(jorge))
		assert.that(carpa1.dejaIngresar(lucas))
		assert.that(carpa1.dejaIngresar(ludmila))
		assert.that(carpa2.dejaIngresar(jorge))
		assert.that(carpa2.dejaIngresar(lucas))
		assert.that(carpa2.dejaIngresar(ludmila))
		assert.that(carpa3.dejaIngresar(jorge))
		assert.that(carpa3.dejaIngresar(lucas))
		assert.that(carpa3.dejaIngresar(ludmila))
		
	}
	
	test "Pueden entonces?" {
	
		assert.that(jorge.puedeEntrar(carpa1))			
		assert.notThat(lucas.puedeEntrar(carpa1))		
		assert.that(ludmila.puedeEntrar(carpa1))		
		assert.notThat(jorge.puedeEntrar(carpa2))		
		assert.that(lucas.puedeEntrar(carpa2))			
		assert.notThat(ludmila.puedeEntrar(carpa2))	
		assert.notThat(jorge.puedeEntrar(carpa3))
		assert.notThat(lucas.puedeEntrar(carpa3))
		assert.notThat(ludmila.puedeEntrar(carpa3))

	}

	
		
	test "Tenemos traidores entre nosotros..." {
		
		assert.notThat(jorge.esPatriota())
		assert.notThat(lucas.esPatriota())
		assert.notThat(ludmila.esPatriota())
		
	}

	test "Carpas exclusivas?" {
		
		assert.notThat(carpa1.esHomogenea())
		assert.that(carpa2.esHomogenea())
		assert.notThat(carpa3.esHomogenea())
		
	}
	
	test "Personas compatibles" {
		
		assert.notThat(jorge.esCompatibleCon(lucas))			
		assert.that(lucas.esCompatibleCon(ludmila))		
		assert.notThat(ludmila.esCompatibleCon(jorge))			
		
	}

}
